function t(t){return null!==t}function e(e){return t(e)&&"GeneratorFunction"===e[Symbol.toStringTag]}function n(e){return t(e)&&void 0!==e[Symbol.iterator]}function r(t){return t&&"number"==typeof t.length&&"function"!=typeof t}function i(t,e="value"){if(null==t)throw new TypeError(`${e} is null or not defined.`)}function o(t,e="value"){if(!function(t){return"function"==typeof t}(t))throw new TypeError(`${e} is not a function.`)}function u(t,e="value"){if(!Number.isFinite(t)||t<0)throw new TypeError(`${e} must be a non-negative number.`)}function l(t,n="value"){if(e(t))throw TypeError(`${n} is a generator function. It should be a normal function.`)}class c{constructor(t=function*(){}){if(this._source=t,e(this._source))this._generator=this._source;else{if(!n(this._source)&&!r(t))throw new TypeError("source must be iterable.");this._generator=function(t){return n(t)?function*(){yield*t}:r(t)?function*(){for(let e=0;e<t.length;e+=1)yield t[e]}:function*(){}}(this._source)}}[Symbol.iterator](){return new c(this._generator())}next(){const t=this._generator().next();return t.done?{done:!0}:{value:t.value}}return(){return{done:!0}}get[Symbol.toStringTag](){return"Seq"}static get[Symbol.species](){return c}static init(t,e){return u(t,"count"),o(e,"initializer"),l(e,"initializer"),0===t?c.empty():new c((function*(){for(let n=0;n<t;n++)yield e(n)}))}static initInfinite(t){o(t,"initializer"),l(t,"initializer");let e=0;return new c((function*(){for(;e<Number.MAX_SAFE_INTEGER;)yield t(e++)}))}static repeat(t,e){return u(t,"count"),0===t?c.empty():new c((function*(){for(let n=0;n<t;n++)yield e}))}static isSeq(t){return"[object Seq]"===Object.prototype.toString.call(t)}get length(){if(Array.isArray(this._source))return this._source.length;let t=0;const e=this._generator();for(;!e.next().done;)t++;return t}isEmpty(){return i(this,"this"),this._generator().next().done}toArray(){return i(this,"this"),[...this._generator()]}forEach(t){i(this,"this"),o(t,"callback"),l(t,"callback");let e,n=0;arguments.length>1&&(e=arguments[1]);const r=this._generator();for(const i of r)t.call(e,i,n++)}filter(t){let e;i(this,"this"),o(t,"predicate"),l(t,"predicate"),arguments.length>1&&(e=arguments[1]);const n=this._generator();return new c((function*(){for(const r of n)t.call(e,r)&&(yield r)}))}reduce(t){let e;i(this,"this"),o(t,"reducer"),l(t,"reducer"),arguments.length>1&&(e=arguments[1]);const n=this._generator();let r,u=n.next();if(u.done){if(e)return e;throw new TypeError("Reduce of empty sequence with no initial value.")}for(r=e?t(e,u.value):u.value;!(u=n.next()).done;)r=t(r,u.value);return r}concat(t){let r;i(this,"this"),r=e(t)?t():n(t)?t[Symbol.iterator]():{*[Symbol.iterator](){yield t}};const o=this._generator();return new c((function*(){yield*o,yield*r}))}some(t){let e,n;i(this,"this"),o(t,"predicate"),l(t,"predicate"),arguments.length>1&&(e=arguments[1]);const r=this._generator();for(;!(n=r.next()).done;)if(t.call(e,n.value))return!0;return!1}every(t){let e,n;i(this,"this"),o(t,"predicate"),l(t,"predicate"),arguments.length>1&&(e=arguments[1]);const r=this._generator();for(;!(n=r.next()).done;)if(!t.call(e,n.value))return!1;return!0}takeWhile(t){let e,n;o(t,"predicate"),l(t,"predicate"),arguments.length>1&&(e=arguments[1]);const r=this._generator();return new c((function*(){for(;!(n=r.next()).done&&t.call(e,n.value);)yield n.value}))}}function a(t){return new c(t)}function s(){return new c}c.empty=s,c.from=a,c.of=function(...t){return new c(t)},c.prototype.take=function(t){if(i(this,"this"),u(t,"count"),0===t)return s();let e;const n=this._generator();return a((function*(){for(let r=0;r<t;r+=1)e=n.next(),e.done||(yield e.value)}))},c.prototype.map=function(t){i(this,"this"),o(t,"callback"),l(t,"callback");let e,n=0;arguments.length>1&&(e=arguments[1]);const r=this._generator();return a((function*(){let i=r.next();for(;!i.done;)yield t.call(e,i.value,n),i=r.next(),n+=1}))};export default c;
